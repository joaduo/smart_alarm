#!/bin/bash
# smart_alarm
# Copyright (c) 2020, Joaquin G. Duo
# Code Licensed under LGPL License. See LICENSE file.

cmd_name=$(basename $0)

PKG=qpython-app-release-v1.4.3.apk

DEPLOY_ANDROID_SDCARD_DIR=${DEPLOY_ANDROID_SDCARD_DIR:-/sdcard}
DEPLOY_ANDROID_DOWNLOAD_DIR=${DEPLOY_ANDROID_DOWNLOAD_DIR:-$DEPLOY_ANDROID_SDCARD_DIR/Download}
DEPLOY_ANDROID_SCRIPTS_DIR=${DEPLOY_ANDROID_SCRIPTS_DIR:-$DEPLOY_ANDROID_SDCARD_DIR/qpython/scripts/}
DEPLOY_ANDROID_REINSTALL=${DEPLOY_ANDROID_REINSTALL}
DEPLOY_ANDROID_DEBUG=${DEPLOY_ANDROID_DEBUG:-1}

LOG_FILE=$cmd_name.log

function ask_variable(){
    local var_name=$1
    local question="$2"
    local default_value="$3"
    if [[ ${!var_name} != "" ]] ; then
        var_value="${!var_name}"
    else
        read -p "    $question" var_value
    fi
    var_value=${var_value:-$default_value}
    case "${var_value,,}" in
        y|yes|true|1)
        echo 1
        ;;
        n|no|false|0)
        echo 0
        ;;
        *)
        echo "$var_value"
        ;;
    esac
}

function exec_cmd(){
    echo 'Executing:'
    echo "    $(printf ' %q' "$@")"
    echo '---------------------' >> $LOG_FILE
    echo "$(date) Executing: $(printf ' %q' "$@")" >> $LOG_FILE
    if [[ $DEPLOY_ANDROID_DEBUG == 0 ]] ; then
        eval $(printf ' %q' "$@") >> $LOG_FILE 2>&1
        local ret=$?
    else
        eval $(printf ' %q' "$@") | tee -a $LOG_FILE 2>&1
        local ret=$?
    fi
    if [[ $ret != 0 ]] ; then
        echo "Command failed: $*
        ret val: $ret
        "
        echo "Check $LOG_FILE:"
        tail $LOG_FILE
        exit 1
    fi
    return $ret
}

install_pkg(){
  if [[ $(adb shell ls -d $DEPLOY_ANDROID_DOWNLOAD_DIR) == *"No such file or directory"* ]]; then
    echo "Directory $DEPLOY_ANDROID_DOWNLOAD_DIR does not exist on android device, please specify it via DEPLOY_ANDROID_DOWNLOAD_DIR env var"
    return 1
  fi

  if [[ ! -e $PKG ]] ; then
      echo "Downloading package"
      exec_cmd wget https://github.com/qpython-android/qpython/releases/download/v1.4.3/qpython-app-release.apk -O $PKG
  fi

  local remote_path=$DEPLOY_ANDROID_DOWNLOAD_DIR/$PKG
  if [[ $(adb shell ls $remote_path) == *"No such file or directory"* ]]; then
      echo "Sending $PKG to android device..."
      exec_cmd adb push $PKG $DEPLOY_ANDROID_DOWNLOAD_DIR
  else
      echo "$PKG already at $remote_path, not pushing"
  fi

  local already_installed=$(adb shell pm list packages | grep org.qpython.qpy)
  if [[ $already_installed != "" ]] ; then
      local reinstall=$(ask_variable DEPLOY_ANDROID_REINSTALL "Uninstall and reinstall $PKG?(y/N) " N)
      if [[ $reinstall == 1 ]]; then
        echo "Reinstalling $PKG..."
        exec_cmd adb shell pm uninstall org.qpython.qpy
        exec_cmd adb shell pm install $remote_path
      fi
  else
      exec_cmd adb shell pm install $remote_path
  fi
  return 0
}

install_pkg
